<%= stylesheet_link_tag 'patients_show', media: 'all', 'data-turbo-track': 'reload' %>
<%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css", crossorigin: "anonymous" %>
<%= javascript_include_tag "https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js", crossorigin: "anonymous" %>
<%= javascript_include_tag "https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js", crossorigin: "anonymous" %>

<div class="patient-details-container">
  <h1 class="patient_show">患者詳細</h1>
  <p class="patient_details">Patient Details</p>
  <div class="patient-detail">
    <strong>印象日:</strong>
    <p><%= @patient.impression_date %></p>
  </div>

  <div class="patient-detail">
    <strong>チェック:</strong>
    <p><%= check_box_tag "note_checked", "1", @patient.note_checked, disabled: true %></p>
  </div>

  <div class="patient-detail">
    <strong>カルテ番号:</strong>
    <p><%= @patient.medical_record_number %></p>
  </div>

  <div class="patient-detail">
    <strong>氏名:</strong>
    <p><%= @patient.name %></p>
  </div>

  <div class="patient-detail">
    <strong>性別:</strong>
    <p><%= @patient.gender %></p>
  </div>

  <div class="patient-detail">
    <strong>補綴種類:</strong>
    <p><%= @patient.prosthesis_type_insurance %></p>
    <p><%= @patient.prosthesis_type_crown %></p>
    <p><%= @patient.prosthesis_type_denture %></p>
  </div>

  <div class="patient-detail">
    <strong>補綴部位:</strong>
    <p>
      <%= convert_to_dental_notation(
          upper_left: @patient.upper_left,
          upper_right: @patient.upper_right,
          lower_left: @patient.lower_left,
          lower_right: @patient.lower_right
        ) %>
    </p>
  </div>

  <div class="patient-detail">
    <strong>メタルの種類:</strong>
    <p><%= @patient.metal_type %></p>
  </div>

  <div class="patient-detail">
    <strong>メタル量:</strong>
    <p>
      <%= @patient.metal_amount.present? ? "#{@patient.metal_amount}g" : "" %>
    </p>
  </div>

  <div class="patient-detail">
    <strong>セット/試適:</strong>
    <p><%= @patient.trial_or_set %></p>
  </div>

  <div class="patient-detail">
    <strong>セット日:</strong>
    <p><%= @patient.set_date %></p>
  </div>

  <div class="patient-detail">
    <strong>依頼先:</strong>
    <p><%= @patient.requester %></p>
  </div>

  <div class="patient-detail">
    <strong>納品チェック:</strong>
    <p><%= check_box_tag "delivery_checked", "1", @patient.delivery_checked, disabled: true %></p>
  </div>

  <div class="patient-detail">
    <strong>メモ:</strong>
    <p><%= @patient.memo %></p>
  </div>

  <div class="patient-detail">
    <strong>お薬:</strong>
    <p><%= @patient.medicine_notebook %></p>
  </div>

  <div class="patient-detail">
    <strong>画像:</strong>
    <% if @patient.images.present? %>
      <% @patient.images.each do |image| %>
        <%= link_to image.url, data: { lightbox: "patient-images", title: @patient.name } do %>
          <%= image_tag image.url, class: "thumbnail", alt: "#{@patient.name}の画像" %>
        <% end %>
      <% end %>
    <% else %>
      <p>画像がありません</p>
    <% end %>
  </div>

  <div class="patient-actions">
    <%= link_to '編集', edit_patient_path(@patient), class: "btn btn-primary" %>
    <%= link_to '削除', patient_path(@patient), method: :delete, data: { confirm: '本当に削除しますか？' }, class: "btn btn-secondary" %>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  // Lightbox の設定
  const lightboxElements = document.querySelectorAll('[data-lightbox]');
  
  if (lightboxElements.length > 0) {
    if (typeof lightbox !== 'undefined') {
      lightbox.option({
        'resizeDuration': 200,
        'wrapAround': true,
        'fitImagesInViewport': true
      });
    } else {
      document.addEventListener('lightbox:loaded', function() {
        lightbox.option({
          'resizeDuration': 200,
          'wrapAround': true,
          'fitImagesInViewport': true
        });
      });
    }
  }

  // チェックボックスの監視とフォーム送信
  document.body.addEventListener('change', function(event) {
    if (event.target.matches('.check-column input[type="checkbox"], .delivery-column input[type="checkbox"]')) {
      event.preventDefault();
      const checkbox = event.target;
      const form = checkbox.closest('form');
      const formData = new FormData(form);
      const url = form.action;

      fetch(url, {
        method: 'PATCH',
        body: formData,
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
          'Accept': 'application/json'
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        // 成功した場合に何か処理が必要ならここに記述
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }
  });
});
</script>